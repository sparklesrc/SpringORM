<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    
        
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" /> <!--Si se trabajara con Oracle se cambia aqui-->
        <property name="url" value="jdbc:mysql://localhost:3306/clubapp" /><!-- y aqui tbm -->
        <property name="username" value="root" />
        <property name="password" value="mysql" />
    </bean>
    
    
    <!-- A diferencia de antes ahora creamos un sessionFactory
    el session factory debe mapear los objetos q van a la bd    
    todo los model -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> <!-- Esta linea casi siempre cambia en versiones -->
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>app.model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> <!-- si fuese oracle aqui tbm cambia -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>

                <prop key="hibernate.connection.useUnicode">true</prop>
                <prop key="hibernate.connection.charSet">UTF8</prop>

            </props>
        </property>
    </bean>
    
    <!-- Aqui no digo quien es el dao como antes... q ponia en los beans -->
    <!-- El base package es solo app. no como el ejemplo app.orm-->
    <context:component-scan base-package="app" />
   
    
</beans>